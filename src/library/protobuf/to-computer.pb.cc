// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/to-computer.proto
// Protobuf C++ Version: 5.26.1

#include "protobuf/to-computer.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace fdbg {

inline constexpr WriteMemory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initial_addr_{::uint64_t{0u}},
        validate_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WriteMemory::WriteMemory(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WriteMemoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WriteMemoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WriteMemoryDefaultTypeInternal() {}
  union {
    WriteMemory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WriteMemoryDefaultTypeInternal _WriteMemory_default_instance_;

inline constexpr ReadMemory::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : initial_addr_{::uint64_t{0u}},
        sz_{0u},
        sequences_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReadMemory::ReadMemory(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReadMemoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadMemoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadMemoryDefaultTypeInternal() {}
  union {
    ReadMemory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadMemoryDefaultTypeInternal _ReadMemory_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Ack::Ack(::_pbi::ConstantInitialized) {}
struct AckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AckDefaultTypeInternal() {}
  union {
    Ack _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AckDefaultTypeInternal _Ack_default_instance_;

inline constexpr ToComputer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ToComputer::ToComputer(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ToComputerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToComputerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToComputerDefaultTypeInternal() {}
  union {
    ToComputer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToComputerDefaultTypeInternal _ToComputer_default_instance_;
}  // namespace fdbg
static ::_pb::Metadata file_level_metadata_protobuf_2fto_2dcomputer_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_protobuf_2fto_2dcomputer_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protobuf_2fto_2dcomputer_2eproto = nullptr;
const ::uint32_t
    TableStruct_protobuf_2fto_2dcomputer_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fdbg::Ack, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fdbg::WriteMemory, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fdbg::WriteMemory, _impl_.initial_addr_),
        PROTOBUF_FIELD_OFFSET(::fdbg::WriteMemory, _impl_.bytes_),
        PROTOBUF_FIELD_OFFSET(::fdbg::WriteMemory, _impl_.validate_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fdbg::ReadMemory, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::fdbg::ReadMemory, _impl_.initial_addr_),
        PROTOBUF_FIELD_OFFSET(::fdbg::ReadMemory, _impl_.sz_),
        PROTOBUF_FIELD_OFFSET(::fdbg::ReadMemory, _impl_.sequences_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::fdbg::ToComputer, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::fdbg::ToComputer, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::fdbg::ToComputer, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::fdbg::Ack)},
        {8, -1, -1, sizeof(::fdbg::WriteMemory)},
        {19, -1, -1, sizeof(::fdbg::ReadMemory)},
        {30, -1, -1, sizeof(::fdbg::ToComputer)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::fdbg::_Ack_default_instance_._instance,
    &::fdbg::_WriteMemory_default_instance_._instance,
    &::fdbg::_ReadMemory_default_instance_._instance,
    &::fdbg::_ToComputer_default_instance_._instance,
};
const char descriptor_table_protodef_protobuf_2fto_2dcomputer_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\032protobuf/to-computer.proto\022\004fdbg\"\005\n\003Ac"
    "k\"D\n\013WriteMemory\022\024\n\014initial_addr\030\001 \001(\004\022\r"
    "\n\005bytes\030\002 \001(\014\022\020\n\010validate\030\003 \001(\010\"A\n\nReadM"
    "emory\022\024\n\014initial_addr\030\001 \001(\004\022\n\n\002sz\030\002 \001(\r\022"
    "\021\n\tsequences\030\003 \001(\r\"\205\001\n\nToComputer\022\030\n\003ack"
    "\030\001 \001(\0132\t.fdbg.AckH\000\022)\n\014write_memory\030\002 \001("
    "\0132\021.fdbg.WriteMemoryH\000\022\'\n\013read_memory\030\003 "
    "\001(\0132\020.fdbg.ReadMemoryH\000B\t\n\007messageb\006prot"
    "o3"
};
static ::absl::once_flag descriptor_table_protobuf_2fto_2dcomputer_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protobuf_2fto_2dcomputer_2eproto = {
    false,
    false,
    322,
    descriptor_table_protodef_protobuf_2fto_2dcomputer_2eproto,
    "protobuf/to-computer.proto",
    &descriptor_table_protobuf_2fto_2dcomputer_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_protobuf_2fto_2dcomputer_2eproto::offsets,
    file_level_metadata_protobuf_2fto_2dcomputer_2eproto,
    file_level_enum_descriptors_protobuf_2fto_2dcomputer_2eproto,
    file_level_service_descriptors_protobuf_2fto_2dcomputer_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protobuf_2fto_2dcomputer_2eproto_getter() {
  return &descriptor_table_protobuf_2fto_2dcomputer_2eproto;
}
namespace fdbg {
// ===================================================================

class Ack::_Internal {
 public:
};

Ack::Ack(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:fdbg.Ack)
}
Ack::Ack(
    ::google::protobuf::Arena* arena,
    const Ack& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Ack* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:fdbg.Ack)
}









::google::protobuf::Metadata Ack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_protobuf_2fto_2dcomputer_2eproto_getter,
                                   &descriptor_table_protobuf_2fto_2dcomputer_2eproto_once,
                                   file_level_metadata_protobuf_2fto_2dcomputer_2eproto[0]);
}
// ===================================================================

class WriteMemory::_Internal {
 public:
};

WriteMemory::WriteMemory(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fdbg.WriteMemory)
}
inline PROTOBUF_NDEBUG_INLINE WriteMemory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : bytes_(arena, from.bytes_),
        _cached_size_{0} {}

WriteMemory::WriteMemory(
    ::google::protobuf::Arena* arena,
    const WriteMemory& from)
    : ::google::protobuf::Message(arena) {
  WriteMemory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, initial_addr_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, initial_addr_),
           offsetof(Impl_, validate_) -
               offsetof(Impl_, initial_addr_) +
               sizeof(Impl_::validate_));

  // @@protoc_insertion_point(copy_constructor:fdbg.WriteMemory)
}
inline PROTOBUF_NDEBUG_INLINE WriteMemory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : bytes_(arena),
        _cached_size_{0} {}

inline void WriteMemory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, initial_addr_),
           0,
           offsetof(Impl_, validate_) -
               offsetof(Impl_, initial_addr_) +
               sizeof(Impl_::validate_));
}
WriteMemory::~WriteMemory() {
  // @@protoc_insertion_point(destructor:fdbg.WriteMemory)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WriteMemory::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.bytes_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
WriteMemory::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(WriteMemory, _impl_._cached_size_),
              false,
          },
          &WriteMemory::MergeImpl,
          &WriteMemory::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void WriteMemory::Clear() {
// @@protoc_insertion_point(message_clear_start:fdbg.WriteMemory)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bytes_.ClearToEmpty();
  ::memset(&_impl_.initial_addr_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.validate_) -
      reinterpret_cast<char*>(&_impl_.initial_addr_)) + sizeof(_impl_.validate_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WriteMemory::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> WriteMemory::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WriteMemory_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fdbg::WriteMemory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 initial_addr = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WriteMemory, _impl_.initial_addr_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WriteMemory, _impl_.initial_addr_)}},
    // bytes bytes = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WriteMemory, _impl_.bytes_)}},
    // bool validate = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WriteMemory, _impl_.validate_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(WriteMemory, _impl_.validate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 initial_addr = 1;
    {PROTOBUF_FIELD_OFFSET(WriteMemory, _impl_.initial_addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes bytes = 2;
    {PROTOBUF_FIELD_OFFSET(WriteMemory, _impl_.bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool validate = 3;
    {PROTOBUF_FIELD_OFFSET(WriteMemory, _impl_.validate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* WriteMemory::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fdbg.WriteMemory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 initial_addr = 1;
  if (this->_internal_initial_addr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_initial_addr(), target);
  }

  // bytes bytes = 2;
  if (!this->_internal_bytes().empty()) {
    const std::string& _s = this->_internal_bytes();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // bool validate = 3;
  if (this->_internal_validate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_validate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fdbg.WriteMemory)
  return target;
}

::size_t WriteMemory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fdbg.WriteMemory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes bytes = 2;
  if (!this->_internal_bytes().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_bytes());
  }

  // uint64 initial_addr = 1;
  if (this->_internal_initial_addr() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_initial_addr());
  }

  // bool validate = 3;
  if (this->_internal_validate() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void WriteMemory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WriteMemory*>(&to_msg);
  auto& from = static_cast<const WriteMemory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fdbg.WriteMemory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bytes().empty()) {
    _this->_internal_set_bytes(from._internal_bytes());
  }
  if (from._internal_initial_addr() != 0) {
    _this->_impl_.initial_addr_ = from._impl_.initial_addr_;
  }
  if (from._internal_validate() != 0) {
    _this->_impl_.validate_ = from._impl_.validate_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WriteMemory::CopyFrom(const WriteMemory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fdbg.WriteMemory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WriteMemory::IsInitialized() const {
  return true;
}

void WriteMemory::InternalSwap(WriteMemory* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bytes_, &other->_impl_.bytes_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WriteMemory, _impl_.validate_)
      + sizeof(WriteMemory::_impl_.validate_)
      - PROTOBUF_FIELD_OFFSET(WriteMemory, _impl_.initial_addr_)>(
          reinterpret_cast<char*>(&_impl_.initial_addr_),
          reinterpret_cast<char*>(&other->_impl_.initial_addr_));
}

::google::protobuf::Metadata WriteMemory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_protobuf_2fto_2dcomputer_2eproto_getter,
                                   &descriptor_table_protobuf_2fto_2dcomputer_2eproto_once,
                                   file_level_metadata_protobuf_2fto_2dcomputer_2eproto[1]);
}
// ===================================================================

class ReadMemory::_Internal {
 public:
};

ReadMemory::ReadMemory(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fdbg.ReadMemory)
}
ReadMemory::ReadMemory(
    ::google::protobuf::Arena* arena, const ReadMemory& from)
    : ReadMemory(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ReadMemory::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ReadMemory::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, initial_addr_),
           0,
           offsetof(Impl_, sequences_) -
               offsetof(Impl_, initial_addr_) +
               sizeof(Impl_::sequences_));
}
ReadMemory::~ReadMemory() {
  // @@protoc_insertion_point(destructor:fdbg.ReadMemory)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReadMemory::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReadMemory::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ReadMemory, _impl_._cached_size_),
              false,
          },
          &ReadMemory::MergeImpl,
          &ReadMemory::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ReadMemory::Clear() {
// @@protoc_insertion_point(message_clear_start:fdbg.ReadMemory)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.initial_addr_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sequences_) -
      reinterpret_cast<char*>(&_impl_.initial_addr_)) + sizeof(_impl_.sequences_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReadMemory::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> ReadMemory::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ReadMemory_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fdbg::ReadMemory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 initial_addr = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReadMemory, _impl_.initial_addr_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ReadMemory, _impl_.initial_addr_)}},
    // uint32 sz = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReadMemory, _impl_.sz_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ReadMemory, _impl_.sz_)}},
    // uint32 sequences = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReadMemory, _impl_.sequences_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ReadMemory, _impl_.sequences_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 initial_addr = 1;
    {PROTOBUF_FIELD_OFFSET(ReadMemory, _impl_.initial_addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 sz = 2;
    {PROTOBUF_FIELD_OFFSET(ReadMemory, _impl_.sz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 sequences = 3;
    {PROTOBUF_FIELD_OFFSET(ReadMemory, _impl_.sequences_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ReadMemory::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fdbg.ReadMemory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 initial_addr = 1;
  if (this->_internal_initial_addr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_initial_addr(), target);
  }

  // uint32 sz = 2;
  if (this->_internal_sz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_sz(), target);
  }

  // uint32 sequences = 3;
  if (this->_internal_sequences() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_sequences(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fdbg.ReadMemory)
  return target;
}

::size_t ReadMemory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fdbg.ReadMemory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 initial_addr = 1;
  if (this->_internal_initial_addr() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_initial_addr());
  }

  // uint32 sz = 2;
  if (this->_internal_sz() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_sz());
  }

  // uint32 sequences = 3;
  if (this->_internal_sequences() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_sequences());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReadMemory::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReadMemory*>(&to_msg);
  auto& from = static_cast<const ReadMemory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fdbg.ReadMemory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_initial_addr() != 0) {
    _this->_impl_.initial_addr_ = from._impl_.initial_addr_;
  }
  if (from._internal_sz() != 0) {
    _this->_impl_.sz_ = from._impl_.sz_;
  }
  if (from._internal_sequences() != 0) {
    _this->_impl_.sequences_ = from._impl_.sequences_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReadMemory::CopyFrom(const ReadMemory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fdbg.ReadMemory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReadMemory::IsInitialized() const {
  return true;
}

void ReadMemory::InternalSwap(ReadMemory* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadMemory, _impl_.sequences_)
      + sizeof(ReadMemory::_impl_.sequences_)
      - PROTOBUF_FIELD_OFFSET(ReadMemory, _impl_.initial_addr_)>(
          reinterpret_cast<char*>(&_impl_.initial_addr_),
          reinterpret_cast<char*>(&other->_impl_.initial_addr_));
}

::google::protobuf::Metadata ReadMemory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_protobuf_2fto_2dcomputer_2eproto_getter,
                                   &descriptor_table_protobuf_2fto_2dcomputer_2eproto_once,
                                   file_level_metadata_protobuf_2fto_2dcomputer_2eproto[2]);
}
// ===================================================================

class ToComputer::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::fdbg::ToComputer, _impl_._oneof_case_);
};

void ToComputer::set_allocated_ack(::fdbg::Ack* ack) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (ack) {
    ::google::protobuf::Arena* submessage_arena = ack->GetArena();
    if (message_arena != submessage_arena) {
      ack = ::google::protobuf::internal::GetOwnedMessage(message_arena, ack, submessage_arena);
    }
    set_has_ack();
    _impl_.message_.ack_ = ack;
  }
  // @@protoc_insertion_point(field_set_allocated:fdbg.ToComputer.ack)
}
void ToComputer::set_allocated_write_memory(::fdbg::WriteMemory* write_memory) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (write_memory) {
    ::google::protobuf::Arena* submessage_arena = write_memory->GetArena();
    if (message_arena != submessage_arena) {
      write_memory = ::google::protobuf::internal::GetOwnedMessage(message_arena, write_memory, submessage_arena);
    }
    set_has_write_memory();
    _impl_.message_.write_memory_ = write_memory;
  }
  // @@protoc_insertion_point(field_set_allocated:fdbg.ToComputer.write_memory)
}
void ToComputer::set_allocated_read_memory(::fdbg::ReadMemory* read_memory) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (read_memory) {
    ::google::protobuf::Arena* submessage_arena = read_memory->GetArena();
    if (message_arena != submessage_arena) {
      read_memory = ::google::protobuf::internal::GetOwnedMessage(message_arena, read_memory, submessage_arena);
    }
    set_has_read_memory();
    _impl_.message_.read_memory_ = read_memory;
  }
  // @@protoc_insertion_point(field_set_allocated:fdbg.ToComputer.read_memory)
}
ToComputer::ToComputer(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fdbg.ToComputer)
}
inline PROTOBUF_NDEBUG_INLINE ToComputer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ToComputer::ToComputer(
    ::google::protobuf::Arena* arena,
    const ToComputer& from)
    : ::google::protobuf::Message(arena) {
  ToComputer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (message_case()) {
    case MESSAGE_NOT_SET:
      break;
      case kAck:
        _impl_.message_.ack_ = ::google::protobuf::Message::CopyConstruct<::fdbg::Ack>(arena, *from._impl_.message_.ack_);
        break;
      case kWriteMemory:
        _impl_.message_.write_memory_ = ::google::protobuf::Message::CopyConstruct<::fdbg::WriteMemory>(arena, *from._impl_.message_.write_memory_);
        break;
      case kReadMemory:
        _impl_.message_.read_memory_ = ::google::protobuf::Message::CopyConstruct<::fdbg::ReadMemory>(arena, *from._impl_.message_.read_memory_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:fdbg.ToComputer)
}
inline PROTOBUF_NDEBUG_INLINE ToComputer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ToComputer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ToComputer::~ToComputer() {
  // @@protoc_insertion_point(destructor:fdbg.ToComputer)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ToComputer::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_message()) {
    clear_message();
  }
  _impl_.~Impl_();
}

void ToComputer::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:fdbg.ToComputer)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (message_case()) {
    case kAck: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.ack_;
      }
      break;
    }
    case kWriteMemory: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.write_memory_;
      }
      break;
    }
    case kReadMemory: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.read_memory_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
ToComputer::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ToComputer, _impl_._cached_size_),
              false,
          },
          &ToComputer::MergeImpl,
          &ToComputer::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ToComputer::Clear() {
// @@protoc_insertion_point(message_clear_start:fdbg.ToComputer)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ToComputer::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2> ToComputer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ToComputer_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::fdbg::ToComputer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .fdbg.Ack ack = 1;
    {PROTOBUF_FIELD_OFFSET(ToComputer, _impl_.message_.ack_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .fdbg.WriteMemory write_memory = 2;
    {PROTOBUF_FIELD_OFFSET(ToComputer, _impl_.message_.write_memory_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .fdbg.ReadMemory read_memory = 3;
    {PROTOBUF_FIELD_OFFSET(ToComputer, _impl_.message_.read_memory_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::FieldAuxDefaultMessage{}, &::fdbg::_Ack_default_instance_},
    {::_pbi::TcParser::GetTable<::fdbg::WriteMemory>()},
    {::_pbi::TcParser::GetTable<::fdbg::ReadMemory>()},
  }}, {{
  }},
};

::uint8_t* ToComputer::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fdbg.ToComputer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (message_case()) {
    case kAck: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.message_.ack_, _impl_.message_.ack_->GetCachedSize(), target, stream);
      break;
    }
    case kWriteMemory: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.message_.write_memory_, _impl_.message_.write_memory_->GetCachedSize(), target, stream);
      break;
    }
    case kReadMemory: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.message_.read_memory_, _impl_.message_.read_memory_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fdbg.ToComputer)
  return target;
}

::size_t ToComputer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fdbg.ToComputer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_case()) {
    // .fdbg.Ack ack = 1;
    case kAck: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.message_.ack_);
      break;
    }
    // .fdbg.WriteMemory write_memory = 2;
    case kWriteMemory: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.message_.write_memory_);
      break;
    }
    // .fdbg.ReadMemory read_memory = 3;
    case kReadMemory: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.message_.read_memory_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ToComputer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ToComputer*>(&to_msg);
  auto& from = static_cast<const ToComputer&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:fdbg.ToComputer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_message();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAck: {
        if (oneof_needs_init) {
          _this->_impl_.message_.ack_ =
              ::google::protobuf::Message::CopyConstruct<::fdbg::Ack>(arena, *from._impl_.message_.ack_);
        } else {
          _this->_impl_.message_.ack_->MergeFrom(from._internal_ack());
        }
        break;
      }
      case kWriteMemory: {
        if (oneof_needs_init) {
          _this->_impl_.message_.write_memory_ =
              ::google::protobuf::Message::CopyConstruct<::fdbg::WriteMemory>(arena, *from._impl_.message_.write_memory_);
        } else {
          _this->_impl_.message_.write_memory_->MergeFrom(from._internal_write_memory());
        }
        break;
      }
      case kReadMemory: {
        if (oneof_needs_init) {
          _this->_impl_.message_.read_memory_ =
              ::google::protobuf::Message::CopyConstruct<::fdbg::ReadMemory>(arena, *from._impl_.message_.read_memory_);
        } else {
          _this->_impl_.message_.read_memory_->MergeFrom(from._internal_read_memory());
        }
        break;
      }
      case MESSAGE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ToComputer::CopyFrom(const ToComputer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fdbg.ToComputer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ToComputer::IsInitialized() const {
  return true;
}

void ToComputer::InternalSwap(ToComputer* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_, other->_impl_.message_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ToComputer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_protobuf_2fto_2dcomputer_2eproto_getter,
                                   &descriptor_table_protobuf_2fto_2dcomputer_2eproto_once,
                                   file_level_metadata_protobuf_2fto_2dcomputer_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace fdbg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_protobuf_2fto_2dcomputer_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
