syntax = "proto3";

package fdbg;

message Ack {}

message WriteMemory {
  uint64 initial_addr = 1;
  bytes  bytes        = 2;
  bool   validate     = 3;
}

message ReadMemory {
  uint64 initial_addr = 1;
  uint32 sz           = 2;
  uint32 sequences    = 3;
}

message Reset {}

message Step {
  bool full = 1;
}

message Cycle {}

message Breakpoint {
  enum Action {
    ADD       = 0;
    REMOVE    = 1;
    CLEAR_ALL = 2;
  }
  uint64 address = 1;
  Action action  = 2;
}

message Run {
  bool forever = 1;
}

message GetRunStatus {}

message Pause {}

message ToComputer {
  oneof message {
    Ack          ack            = 1;   // response: AckResponse
    Reset        reset          = 2;   // response: ComputerStatus
    WriteMemory  write_memory   = 3;   // response: WriteMemoryResponse
    ReadMemory   read_memory    = 4;   // response: ReadMemoryResponse
    Cycle        cycle          = 5;   // response: CycleResult
    Step         step           = 6;   // response: ComputerStatus
    Breakpoint   breakpoint     = 7;   // response: breakpoint list
    Run          run            = 8;   // response: status ok
    GetRunStatus get_run_status = 9;   // response: RunStatus
    Pause        pause          = 10;  // response: ComputerStatus
  }
}