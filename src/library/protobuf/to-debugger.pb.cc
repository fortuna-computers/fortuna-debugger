// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/to-debugger.proto

#include "protobuf/to-debugger.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace fdbg {

inline constexpr WriteMemoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : first_failed_pos_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WriteMemoryResponse::WriteMemoryResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WriteMemoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WriteMemoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WriteMemoryResponseDefaultTypeInternal() {}
  union {
    WriteMemoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WriteMemoryResponseDefaultTypeInternal _WriteMemoryResponse_default_instance_;

inline constexpr ReadMemoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initial_pos_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReadMemoryResponse::ReadMemoryResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReadMemoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReadMemoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReadMemoryResponseDefaultTypeInternal() {}
  union {
    ReadMemoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReadMemoryResponseDefaultTypeInternal _ReadMemoryResponse_default_instance_;

inline constexpr AckResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AckResponse::AckResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AckResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AckResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AckResponseDefaultTypeInternal() {}
  union {
    AckResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AckResponseDefaultTypeInternal _AckResponse_default_instance_;

inline constexpr ToDebugger::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_{static_cast< ::fdbg::Status >(0)},
        message_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ToDebugger::ToDebugger(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ToDebuggerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToDebuggerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToDebuggerDefaultTypeInternal() {}
  union {
    ToDebugger _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToDebuggerDefaultTypeInternal _ToDebugger_default_instance_;
}  // namespace fdbg
static ::_pb::Metadata file_level_metadata_protobuf_2fto_2ddebugger_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_protobuf_2fto_2ddebugger_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_protobuf_2fto_2ddebugger_2eproto = nullptr;
const ::uint32_t TableStruct_protobuf_2fto_2ddebugger_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::fdbg::AckResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::fdbg::AckResponse, _impl_.id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::fdbg::WriteMemoryResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::fdbg::WriteMemoryResponse, _impl_.first_failed_pos_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::fdbg::ReadMemoryResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::fdbg::ReadMemoryResponse, _impl_.initial_pos_),
    PROTOBUF_FIELD_OFFSET(::fdbg::ReadMemoryResponse, _impl_.bytes_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::fdbg::ToDebugger, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::fdbg::ToDebugger, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::fdbg::ToDebugger, _impl_.status_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::fdbg::ToDebugger, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::fdbg::AckResponse)},
        {9, -1, -1, sizeof(::fdbg::WriteMemoryResponse)},
        {18, -1, -1, sizeof(::fdbg::ReadMemoryResponse)},
        {28, -1, -1, sizeof(::fdbg::ToDebugger)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::fdbg::_AckResponse_default_instance_._instance,
    &::fdbg::_WriteMemoryResponse_default_instance_._instance,
    &::fdbg::_ReadMemoryResponse_default_instance_._instance,
    &::fdbg::_ToDebugger_default_instance_._instance,
};
const char descriptor_table_protodef_protobuf_2fto_2ddebugger_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\032protobuf/to-debugger.proto\022\004fdbg\"\031\n\013Ac"
    "kResponse\022\n\n\002id\030\001 \001(\r\"/\n\023WriteMemoryResp"
    "onse\022\030\n\020first_failed_pos\030\001 \001(\004\"8\n\022ReadMe"
    "moryResponse\022\023\n\013initial_pos\030\001 \001(\004\022\r\n\005byt"
    "es\030\002 \001(\014\"\326\001\n\nToDebugger\022\034\n\006status\030\001 \001(\0162"
    "\014.fdbg.Status\022)\n\014ack_response\030\002 \001(\0132\021.fd"
    "bg.AckResponseH\000\022:\n\025write_memory_respons"
    "e\030\003 \001(\0132\031.fdbg.WriteMemoryResponseH\000\0228\n\024"
    "read_memory_response\030\004 \001(\0132\030.fdbg.ReadMe"
    "moryResponseH\000B\t\n\007message*(\n\006Status\022\006\n\002O"
    "K\020\000\022\026\n\022ERR_WRITING_MEMORY\020\001b\006proto3"
};
static ::absl::once_flag descriptor_table_protobuf_2fto_2ddebugger_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protobuf_2fto_2ddebugger_2eproto = {
    false,
    false,
    435,
    descriptor_table_protodef_protobuf_2fto_2ddebugger_2eproto,
    "protobuf/to-debugger.proto",
    &descriptor_table_protobuf_2fto_2ddebugger_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_protobuf_2fto_2ddebugger_2eproto::offsets,
    file_level_metadata_protobuf_2fto_2ddebugger_2eproto,
    file_level_enum_descriptors_protobuf_2fto_2ddebugger_2eproto,
    file_level_service_descriptors_protobuf_2fto_2ddebugger_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protobuf_2fto_2ddebugger_2eproto_getter() {
  return &descriptor_table_protobuf_2fto_2ddebugger_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protobuf_2fto_2ddebugger_2eproto(&descriptor_table_protobuf_2fto_2ddebugger_2eproto);
namespace fdbg {
const ::google::protobuf::EnumDescriptor* Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_protobuf_2fto_2ddebugger_2eproto);
  return file_level_enum_descriptors_protobuf_2fto_2ddebugger_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Status_internal_data_[] = {
    131072u, 0u, };
bool Status_IsValid(int value) {
  return 0 <= value && value <= 1;
}
// ===================================================================

class AckResponse::_Internal {
 public:
};

AckResponse::AckResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fdbg.AckResponse)
}
AckResponse::AckResponse(
    ::google::protobuf::Arena* arena, const AckResponse& from)
    : AckResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AckResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AckResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
AckResponse::~AckResponse() {
  // @@protoc_insertion_point(destructor:fdbg.AckResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AckResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fdbg.AckResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AckResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AckResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AckResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AckResponse, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AckResponse, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(AckResponse, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AckResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fdbg.AckResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fdbg.AckResponse)
  return target;
}

::size_t AckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fdbg.AckResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AckResponse::_class_data_ = {
    AckResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AckResponse::GetClassData() const {
  return &_class_data_;
}

void AckResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AckResponse*>(&to_msg);
  auto& from = static_cast<const AckResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fdbg.AckResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AckResponse::CopyFrom(const AckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fdbg.AckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AckResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AckResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AckResponse::InternalSwap(AckResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata AckResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protobuf_2fto_2ddebugger_2eproto_getter, &descriptor_table_protobuf_2fto_2ddebugger_2eproto_once,
      file_level_metadata_protobuf_2fto_2ddebugger_2eproto[0]);
}
// ===================================================================

class WriteMemoryResponse::_Internal {
 public:
};

WriteMemoryResponse::WriteMemoryResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fdbg.WriteMemoryResponse)
}
WriteMemoryResponse::WriteMemoryResponse(
    ::google::protobuf::Arena* arena, const WriteMemoryResponse& from)
    : WriteMemoryResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE WriteMemoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WriteMemoryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.first_failed_pos_ = {};
}
WriteMemoryResponse::~WriteMemoryResponse() {
  // @@protoc_insertion_point(destructor:fdbg.WriteMemoryResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WriteMemoryResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WriteMemoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fdbg.WriteMemoryResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.first_failed_pos_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WriteMemoryResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> WriteMemoryResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WriteMemoryResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint64 first_failed_pos = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WriteMemoryResponse, _impl_.first_failed_pos_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WriteMemoryResponse, _impl_.first_failed_pos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 first_failed_pos = 1;
    {PROTOBUF_FIELD_OFFSET(WriteMemoryResponse, _impl_.first_failed_pos_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* WriteMemoryResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fdbg.WriteMemoryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 first_failed_pos = 1;
  if (this->_internal_first_failed_pos() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_first_failed_pos(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fdbg.WriteMemoryResponse)
  return target;
}

::size_t WriteMemoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fdbg.WriteMemoryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 first_failed_pos = 1;
  if (this->_internal_first_failed_pos() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_first_failed_pos());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WriteMemoryResponse::_class_data_ = {
    WriteMemoryResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WriteMemoryResponse::GetClassData() const {
  return &_class_data_;
}

void WriteMemoryResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WriteMemoryResponse*>(&to_msg);
  auto& from = static_cast<const WriteMemoryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fdbg.WriteMemoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_first_failed_pos() != 0) {
    _this->_internal_set_first_failed_pos(from._internal_first_failed_pos());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WriteMemoryResponse::CopyFrom(const WriteMemoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fdbg.WriteMemoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WriteMemoryResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WriteMemoryResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WriteMemoryResponse::InternalSwap(WriteMemoryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.first_failed_pos_, other->_impl_.first_failed_pos_);
}

::google::protobuf::Metadata WriteMemoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protobuf_2fto_2ddebugger_2eproto_getter, &descriptor_table_protobuf_2fto_2ddebugger_2eproto_once,
      file_level_metadata_protobuf_2fto_2ddebugger_2eproto[1]);
}
// ===================================================================

class ReadMemoryResponse::_Internal {
 public:
};

ReadMemoryResponse::ReadMemoryResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fdbg.ReadMemoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE ReadMemoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : bytes_(arena, from.bytes_),
        _cached_size_{0} {}

ReadMemoryResponse::ReadMemoryResponse(
    ::google::protobuf::Arena* arena,
    const ReadMemoryResponse& from)
    : ::google::protobuf::Message(arena) {
  ReadMemoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.initial_pos_ = from._impl_.initial_pos_;

  // @@protoc_insertion_point(copy_constructor:fdbg.ReadMemoryResponse)
}
inline PROTOBUF_NDEBUG_INLINE ReadMemoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : bytes_(arena),
        _cached_size_{0} {}

inline void ReadMemoryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.initial_pos_ = {};
}
ReadMemoryResponse::~ReadMemoryResponse() {
  // @@protoc_insertion_point(destructor:fdbg.ReadMemoryResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReadMemoryResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.bytes_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ReadMemoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fdbg.ReadMemoryResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bytes_.ClearToEmpty();
  _impl_.initial_pos_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReadMemoryResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ReadMemoryResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ReadMemoryResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes bytes = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReadMemoryResponse, _impl_.bytes_)}},
    // uint64 initial_pos = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReadMemoryResponse, _impl_.initial_pos_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ReadMemoryResponse, _impl_.initial_pos_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 initial_pos = 1;
    {PROTOBUF_FIELD_OFFSET(ReadMemoryResponse, _impl_.initial_pos_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes bytes = 2;
    {PROTOBUF_FIELD_OFFSET(ReadMemoryResponse, _impl_.bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ReadMemoryResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fdbg.ReadMemoryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 initial_pos = 1;
  if (this->_internal_initial_pos() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_initial_pos(), target);
  }

  // bytes bytes = 2;
  if (!this->_internal_bytes().empty()) {
    const std::string& _s = this->_internal_bytes();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fdbg.ReadMemoryResponse)
  return target;
}

::size_t ReadMemoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fdbg.ReadMemoryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes bytes = 2;
  if (!this->_internal_bytes().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_bytes());
  }

  // uint64 initial_pos = 1;
  if (this->_internal_initial_pos() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_initial_pos());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ReadMemoryResponse::_class_data_ = {
    ReadMemoryResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ReadMemoryResponse::GetClassData() const {
  return &_class_data_;
}

void ReadMemoryResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ReadMemoryResponse*>(&to_msg);
  auto& from = static_cast<const ReadMemoryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fdbg.ReadMemoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bytes().empty()) {
    _this->_internal_set_bytes(from._internal_bytes());
  }
  if (from._internal_initial_pos() != 0) {
    _this->_internal_set_initial_pos(from._internal_initial_pos());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReadMemoryResponse::CopyFrom(const ReadMemoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fdbg.ReadMemoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReadMemoryResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ReadMemoryResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ReadMemoryResponse::InternalSwap(ReadMemoryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bytes_, &other->_impl_.bytes_, arena);
        swap(_impl_.initial_pos_, other->_impl_.initial_pos_);
}

::google::protobuf::Metadata ReadMemoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protobuf_2fto_2ddebugger_2eproto_getter, &descriptor_table_protobuf_2fto_2ddebugger_2eproto_once,
      file_level_metadata_protobuf_2fto_2ddebugger_2eproto[2]);
}
// ===================================================================

class ToDebugger::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::fdbg::ToDebugger, _impl_._oneof_case_);
  static const ::fdbg::AckResponse& ack_response(const ToDebugger* msg);
  static const ::fdbg::WriteMemoryResponse& write_memory_response(const ToDebugger* msg);
  static const ::fdbg::ReadMemoryResponse& read_memory_response(const ToDebugger* msg);
};

const ::fdbg::AckResponse& ToDebugger::_Internal::ack_response(const ToDebugger* msg) {
  return *msg->_impl_.message_.ack_response_;
}
const ::fdbg::WriteMemoryResponse& ToDebugger::_Internal::write_memory_response(const ToDebugger* msg) {
  return *msg->_impl_.message_.write_memory_response_;
}
const ::fdbg::ReadMemoryResponse& ToDebugger::_Internal::read_memory_response(const ToDebugger* msg) {
  return *msg->_impl_.message_.read_memory_response_;
}
void ToDebugger::set_allocated_ack_response(::fdbg::AckResponse* ack_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (ack_response) {
    ::google::protobuf::Arena* submessage_arena = ack_response->GetArena();
    if (message_arena != submessage_arena) {
      ack_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, ack_response, submessage_arena);
    }
    set_has_ack_response();
    _impl_.message_.ack_response_ = ack_response;
  }
  // @@protoc_insertion_point(field_set_allocated:fdbg.ToDebugger.ack_response)
}
void ToDebugger::set_allocated_write_memory_response(::fdbg::WriteMemoryResponse* write_memory_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (write_memory_response) {
    ::google::protobuf::Arena* submessage_arena = write_memory_response->GetArena();
    if (message_arena != submessage_arena) {
      write_memory_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, write_memory_response, submessage_arena);
    }
    set_has_write_memory_response();
    _impl_.message_.write_memory_response_ = write_memory_response;
  }
  // @@protoc_insertion_point(field_set_allocated:fdbg.ToDebugger.write_memory_response)
}
void ToDebugger::set_allocated_read_memory_response(::fdbg::ReadMemoryResponse* read_memory_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (read_memory_response) {
    ::google::protobuf::Arena* submessage_arena = read_memory_response->GetArena();
    if (message_arena != submessage_arena) {
      read_memory_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, read_memory_response, submessage_arena);
    }
    set_has_read_memory_response();
    _impl_.message_.read_memory_response_ = read_memory_response;
  }
  // @@protoc_insertion_point(field_set_allocated:fdbg.ToDebugger.read_memory_response)
}
ToDebugger::ToDebugger(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:fdbg.ToDebugger)
}
inline PROTOBUF_NDEBUG_INLINE ToDebugger::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ToDebugger::ToDebugger(
    ::google::protobuf::Arena* arena,
    const ToDebugger& from)
    : ::google::protobuf::Message(arena) {
  ToDebugger* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.status_ = from._impl_.status_;
  switch (message_case()) {
    case MESSAGE_NOT_SET:
      break;
      case kAckResponse:
        _impl_.message_.ack_response_ = CreateMaybeMessage<::fdbg::AckResponse>(arena, *from._impl_.message_.ack_response_);
        break;
      case kWriteMemoryResponse:
        _impl_.message_.write_memory_response_ = CreateMaybeMessage<::fdbg::WriteMemoryResponse>(arena, *from._impl_.message_.write_memory_response_);
        break;
      case kReadMemoryResponse:
        _impl_.message_.read_memory_response_ = CreateMaybeMessage<::fdbg::ReadMemoryResponse>(arena, *from._impl_.message_.read_memory_response_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:fdbg.ToDebugger)
}
inline PROTOBUF_NDEBUG_INLINE ToDebugger::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ToDebugger::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ToDebugger::~ToDebugger() {
  // @@protoc_insertion_point(destructor:fdbg.ToDebugger)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ToDebugger::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_message()) {
    clear_message();
  }
  _impl_.~Impl_();
}

void ToDebugger::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:fdbg.ToDebugger)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (message_case()) {
    case kAckResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.ack_response_;
      }
      break;
    }
    case kWriteMemoryResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.write_memory_response_;
      }
      break;
    }
    case kReadMemoryResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.read_memory_response_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_NOT_SET;
}


PROTOBUF_NOINLINE void ToDebugger::Clear() {
// @@protoc_insertion_point(message_clear_start:fdbg.ToDebugger)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = 0;
  clear_message();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ToDebugger::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 3, 0, 2> ToDebugger::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ToDebugger_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .fdbg.Status status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ToDebugger, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ToDebugger, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .fdbg.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(ToDebugger, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .fdbg.AckResponse ack_response = 2;
    {PROTOBUF_FIELD_OFFSET(ToDebugger, _impl_.message_.ack_response_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .fdbg.WriteMemoryResponse write_memory_response = 3;
    {PROTOBUF_FIELD_OFFSET(ToDebugger, _impl_.message_.write_memory_response_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .fdbg.ReadMemoryResponse read_memory_response = 4;
    {PROTOBUF_FIELD_OFFSET(ToDebugger, _impl_.message_.read_memory_response_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::fdbg::AckResponse>()},
    {::_pbi::TcParser::GetTable<::fdbg::WriteMemoryResponse>()},
    {::_pbi::TcParser::GetTable<::fdbg::ReadMemoryResponse>()},
  }}, {{
  }},
};

::uint8_t* ToDebugger::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fdbg.ToDebugger)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .fdbg.Status status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_status(), target);
  }

  switch (message_case()) {
    case kAckResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::ack_response(this),
          _Internal::ack_response(this).GetCachedSize(), target, stream);
      break;
    }
    case kWriteMemoryResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::write_memory_response(this),
          _Internal::write_memory_response(this).GetCachedSize(), target, stream);
      break;
    }
    case kReadMemoryResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::read_memory_response(this),
          _Internal::read_memory_response(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fdbg.ToDebugger)
  return target;
}

::size_t ToDebugger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fdbg.ToDebugger)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .fdbg.Status status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  switch (message_case()) {
    // .fdbg.AckResponse ack_response = 2;
    case kAckResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.message_.ack_response_);
      break;
    }
    // .fdbg.WriteMemoryResponse write_memory_response = 3;
    case kWriteMemoryResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.message_.write_memory_response_);
      break;
    }
    // .fdbg.ReadMemoryResponse read_memory_response = 4;
    case kReadMemoryResponse: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.message_.read_memory_response_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ToDebugger::_class_data_ = {
    ToDebugger::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ToDebugger::GetClassData() const {
  return &_class_data_;
}

void ToDebugger::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ToDebugger*>(&to_msg);
  auto& from = static_cast<const ToDebugger&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:fdbg.ToDebugger)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  switch (from.message_case()) {
    case kAckResponse: {
      _this->_internal_mutable_ack_response()->::fdbg::AckResponse::MergeFrom(
          from._internal_ack_response());
      break;
    }
    case kWriteMemoryResponse: {
      _this->_internal_mutable_write_memory_response()->::fdbg::WriteMemoryResponse::MergeFrom(
          from._internal_write_memory_response());
      break;
    }
    case kReadMemoryResponse: {
      _this->_internal_mutable_read_memory_response()->::fdbg::ReadMemoryResponse::MergeFrom(
          from._internal_read_memory_response());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ToDebugger::CopyFrom(const ToDebugger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fdbg.ToDebugger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ToDebugger::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ToDebugger::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ToDebugger::InternalSwap(ToDebugger* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.status_, other->_impl_.status_);
  swap(_impl_.message_, other->_impl_.message_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ToDebugger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protobuf_2fto_2ddebugger_2eproto_getter, &descriptor_table_protobuf_2fto_2ddebugger_2eproto_once,
      file_level_metadata_protobuf_2fto_2ddebugger_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace fdbg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
