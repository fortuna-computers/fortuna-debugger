/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_FDBG_TO_DEBUGGER_PB_H_INCLUDED
#define PB_FDBG_TO_DEBUGGER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _fdbg_AckResponse {
    uint32_t id;
} fdbg_AckResponse;

typedef struct _fdbg_WriteMemoryConfirmation {
    bool error;
    uint64_t first_failed_pos;
} fdbg_WriteMemoryConfirmation;

typedef PB_BYTES_ARRAY_T(64) fdbg_MemoryUpdate_bytes_t;
typedef struct _fdbg_MemoryUpdate {
    uint64_t initial_pos;
    fdbg_MemoryUpdate_bytes_t bytes;
} fdbg_MemoryUpdate;

typedef struct _fdbg_ToDebugger {
    pb_size_t which_message;
    union {
        fdbg_AckResponse ack_response;
        fdbg_WriteMemoryConfirmation write_memory_confirmation;
        fdbg_MemoryUpdate memory_update;
    } message;
} fdbg_ToDebugger;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define fdbg_AckResponse_init_default            {0}
#define fdbg_WriteMemoryConfirmation_init_default {0, 0}
#define fdbg_MemoryUpdate_init_default           {0, {0, {0}}}
#define fdbg_ToDebugger_init_default             {0, {fdbg_AckResponse_init_default}}
#define fdbg_AckResponse_init_zero               {0}
#define fdbg_WriteMemoryConfirmation_init_zero   {0, 0}
#define fdbg_MemoryUpdate_init_zero              {0, {0, {0}}}
#define fdbg_ToDebugger_init_zero                {0, {fdbg_AckResponse_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define fdbg_AckResponse_id_tag                  1
#define fdbg_WriteMemoryConfirmation_error_tag   1
#define fdbg_WriteMemoryConfirmation_first_failed_pos_tag 2
#define fdbg_MemoryUpdate_initial_pos_tag        1
#define fdbg_MemoryUpdate_bytes_tag              2
#define fdbg_ToDebugger_ack_response_tag         1
#define fdbg_ToDebugger_write_memory_confirmation_tag 2
#define fdbg_ToDebugger_memory_update_tag        3

/* Struct field encoding specification for nanopb */
#define fdbg_AckResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id,                1)
#define fdbg_AckResponse_CALLBACK NULL
#define fdbg_AckResponse_DEFAULT NULL

#define fdbg_WriteMemoryConfirmation_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     error,             1) \
X(a, STATIC,   SINGULAR, UINT64,   first_failed_pos,   2)
#define fdbg_WriteMemoryConfirmation_CALLBACK NULL
#define fdbg_WriteMemoryConfirmation_DEFAULT NULL

#define fdbg_MemoryUpdate_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   initial_pos,       1) \
X(a, STATIC,   SINGULAR, BYTES,    bytes,             2)
#define fdbg_MemoryUpdate_CALLBACK NULL
#define fdbg_MemoryUpdate_DEFAULT NULL

#define fdbg_ToDebugger_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,ack_response,message.ack_response),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,write_memory_confirmation,message.write_memory_confirmation),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (message,memory_update,message.memory_update),   3)
#define fdbg_ToDebugger_CALLBACK NULL
#define fdbg_ToDebugger_DEFAULT NULL
#define fdbg_ToDebugger_message_ack_response_MSGTYPE fdbg_AckResponse
#define fdbg_ToDebugger_message_write_memory_confirmation_MSGTYPE fdbg_WriteMemoryConfirmation
#define fdbg_ToDebugger_message_memory_update_MSGTYPE fdbg_MemoryUpdate

extern const pb_msgdesc_t fdbg_AckResponse_msg;
extern const pb_msgdesc_t fdbg_WriteMemoryConfirmation_msg;
extern const pb_msgdesc_t fdbg_MemoryUpdate_msg;
extern const pb_msgdesc_t fdbg_ToDebugger_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define fdbg_AckResponse_fields &fdbg_AckResponse_msg
#define fdbg_WriteMemoryConfirmation_fields &fdbg_WriteMemoryConfirmation_msg
#define fdbg_MemoryUpdate_fields &fdbg_MemoryUpdate_msg
#define fdbg_ToDebugger_fields &fdbg_ToDebugger_msg

/* Maximum encoded size of messages (where known) */
#define FDBG_TO_DEBUGGER_PB_H_MAX_SIZE           fdbg_ToDebugger_size
#define fdbg_AckResponse_size                    6
#define fdbg_MemoryUpdate_size                   77
#define fdbg_ToDebugger_size                     79
#define fdbg_WriteMemoryConfirmation_size        13

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
